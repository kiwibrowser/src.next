/*
 * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

// https://drafts.csswg.org/cssom/#the-cssstylesheet-interface

[
    Exposed=Window
] interface CSSStyleSheet : StyleSheet {
    [CallWith=Document, RaisesException] constructor(optional CSSStyleSheetInit options = {});
    readonly attribute CSSRule? ownerRule;
    [SameObject, RaisesException] readonly attribute CSSRuleList cssRules;
    [RaisesException] unsigned long insertRule(DOMString rule, optional unsigned long index = 0);
    [RaisesException] void deleteRule(unsigned long index);

    [MeasureAs=CSSStyleSheetReplace, CallWith=ScriptState, RaisesException] Promise<CSSStyleSheet> replace(DOMString text);
    [MeasureAs=CSSStyleSheetReplaceSync, RaisesException] void replaceSync(DOMString text);

    // Non-standard APIs
    [MeasureAs=CSSStyleSheetRules, RaisesException] readonly attribute CSSRuleList rules;
    [MeasureAs=CSSStyleSheetAddRule, RaisesException] long addRule(optional DOMString selector = "undefined", optional DOMString style = "undefined", optional unsigned long index);
    [MeasureAs=CSSStyleSheetRemoveRule, RaisesException] void removeRule(optional unsigned long index = 0);
};
